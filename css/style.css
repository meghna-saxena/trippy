/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Lato', 'sans-serif';
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh; /*height should be 95% of viewport height. Remaining 5% leaves a neat white margin at the bottom */
    background-image:  linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 131, 0.8)), url(../img/hero.jpg);
    background-size: cover; 
    background-position: top; /*whenever vh is less eg mobile version, top of img always stays at the top of the container*/
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 75px; /* width will scale accordingly */
}

.logo:hover {
    animation: moveInRight 1s ease-out;
}

.text-box {
    position: absolute;
    top: 40%; /* thses top and left specifications are in relation to parent el */
    left: 50%;
    transform: translate(-50%, -50%); /*nw these 50% are no longer in reltn w/ parent el, bt the el itself, so it centers the el */
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden; /* the entire el will not have shaky backpart upon animation. */
}

.heading-primary-main {
    display: block; /* forces line-break */
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; animation will happen 3 time */
    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    /* SHORT-HAND PROPERTY */
    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% { /*start of animation */
        opacity: 0; /*invisible */
        transform: translateX(-100px); /* animate in x directon, - value starts from left */
    }

    80% { /*mid of animation or 80% of animation */
        transform: translateX(10px); /* positive value moves it to the right */
    }

    100% { /*end of animation */
        opacity: 1;
        transform: translate(0); /* looks the same what it is right now */
    }
}

@keyframes moveInRight {
    0% { 
        opacity: 0; /*invisible */
        transform: translateX(100); /* starts from right since a positive value */
    }

    80% { 
        transform: translateX(-10px); /* neg value moves it to the left */
    }

    100% { 
        opacity: 1;
        transform: translate(0); /* looks the same what it is right now */
    }
}